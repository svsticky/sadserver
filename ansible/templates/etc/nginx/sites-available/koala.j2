# {{ ansible_managed }}

upstream unicorn {
	server unix:/tmp/unicorn.sock fail_timeout=0;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name ~^(koala|leden|intro|members)\.{{ canonical_hostname }};

	ssl_certificate /etc/letsencrypt/live/koala.{{ canonical_hostname }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/koala.{{ canonical_hostname }}/privkey.pem;

	# Security headers already enforced in Rails

	root /var/www/koala.{{ canonical_hostname }}/public;

	client_max_body_size 100M;
	keepalive_timeout 10;

	error_log /var/www/koala.{{ canonical_hostname }}/log/nginx.log warn;
	access_log /var/www/koala.{{ canonical_hostname }}/log/access.log;

	gzip_static on;
	try_files $uri @unicorn;

	location ~* ^/assets/ {
		expires 1y;
		add_header Cache-Control public;

		add_header ETag "";
	}

	location ~* ^/api/ {
		if (-f /var/www/koala.{{ canonical_hostname }}/MAINTENANCE_MODE) {
		    error_page 503 /503.json;
		    return 503;
		}
		add_header Access-Control-Allow-Methods 'HEAD, GET, POST, PUT, PATCH, DELETE';
		add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';

		# No wildcards allowed, allow all '*' or specific uri, can be multiple
		add_header Access-Control-Allow-Origin 'https://radio.{{ canonical_hostname }}';

		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto https;
                proxy_redirect off;
                proxy_pass http://unicorn;
	}

	location @unicorn {
		if (-f /var/www/koala.{{ canonical_hostname }}/MAINTENANCE_MODE) {
		    error_page 503 /503.html;
		    return 503;
		}

		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-Forwarded-Proto https;
		proxy_redirect off;
		proxy_pass http://unicorn;
	}

	error_page 500 502 504 /500.html;
}
