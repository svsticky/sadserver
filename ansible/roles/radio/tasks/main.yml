---
- name: "create user for radio"
  ansible.builtin.user:
    name: "radio"
    home: "{{ radio_config.home }}"
    shell: "/usr/sbin/nologin"
    state: "present"
    system: true
    groups: "nvm"
    append: true
    create_home: false

- name: "Create home directory"
  ansible.builtin.file:
    path: "{{ radio_config.home }}"
    owner: "radio"
    group: "radio"
    mode: "2775"
    state: "directory"


- name: "copy nginx configuration"
  ansible.builtin.template:
    src: "radio.conf.j2"
    dest: "/etc/nginx/sites-available/radio.{{ canonical_hostname }}.conf"
  notify: "reload nginx"

- name: "enable nginx configuration"
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/radio.{{ canonical_hostname }}.conf"
    path: "/etc/nginx/sites-enabled/radio.{{ canonical_hostname }}.conf"
    state: "link"
  notify: "reload nginx"

- name: "create radio webroot"
  ansible.builtin.file:
    path: "{{ radio_config.home }}/radio.{{ canonical_hostname }}"
    owner: "radio"
    group: "radio"
    mode: "2775"
    state: "directory"

- name: "set up radio"
  become_user: "radio"
  become: true
  block:
  - name: "clone radio repository"
    ansible.builtin.git:
      repo: "https://github.com/svsticky/radio.git"
      dest: "{{ radio_config.home }}/radio"
      depth: 1
      force: true
      version: "master"
    diff: false
    notify: "radio repo updated"

  - name: "template environment file for radio"
    ansible.builtin.template:
      src: ".env.j2"
      dest: "{{ radio_config.home }}/radio/.env"
    diff: false

  - name: "ensure packages, node and nvm are up to date"
    ansible.builtin.meta: flush_handlers

  - name: "run npm install"
    ansible.builtin.shell: |
      source {{ nvm.script }}
      nvm use
      npm install
    args:
      chdir: "{{ radio_config.home }}/radio"
      executable: "/bin/bash"

  - name: "try building website"
    block:
      - name: "build website"
        ansible.builtin.shell: |
          source {{ nvm.script }}
          nvm use
          npm run build
        args:
          chdir: "{{ radio_config.home }}/radio"
          executable: "/bin/bash"

  # NOTE: The trailing slashes are significant!
  # Omitting it will create a `public` subdirectory and break stuff.
  # See `man rsync`, section USAGE.
  - name: "copy website contents to webroot"
    ansible.posix.synchronize:
      src: "{{ radio_config.home }}/radio/dist/"
      dest: "{{ radio_config.home }}/radio.{{ canonical_hostname }}/"
      delete: true
      recursive: true
      perms: false
      times: false
    delegate_to: "{{ inventory_hostname }}"
