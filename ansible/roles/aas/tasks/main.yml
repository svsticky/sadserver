---

- name: "add aas user"
  ansible.builtin.user:
    name: "aas"
    shell: "/usr/sbin/nologin"
    home: "/var/www/aas"
    system: true

- name: "permit aas user to start systemd services"
  ansible.builtin.template:
    src: "sudoers.j2"
    dest: "/etc/sudoers.d/aas"
    mode: "0440"
    validate: "/usr/sbin/visudo -cf %s"

- name: "add cachix cache"
  ansible.builtin.command: "cachix use svsticky-aas"

- name: "fetch the aas binaries"
  ansible.builtin.command:
    cmd: "nix-store --realize --add-root /nix/var/nix/gcroots/aas-env {{ secret_aas.nix_pin }}"

- name: "create config file"
  become_user: "aas"
  become: true
  ansible.builtin.template:
    src: "config.json.j2"
    dest: "~/config.json"
    mode: "0600"
  notify: "restart aas"

- name: "copy nginx configuration"
  ansible.builtin.template:
    src: "aas.conf.j2"
    dest: "/etc/nginx/sites-available/aas.{{ canonical_hostname }}.conf"
  notify: "reload nginx"

- name: "enable nginx configuration"
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/aas.{{ canonical_hostname }}.conf"
    path: "/etc/nginx/sites-enabled/aas.{{ canonical_hostname }}.conf"
    state: "link"
  notify: "reload nginx"

- name: "copy systemd service of aas"
  ansible.builtin.template:
    src: "aas.service.j2"
    dest: "/etc/systemd/system/aas.service"
  notify: "restart aas"

- name: "run aas service"
  ansible.builtin.systemd:
    unit: "aas.service"
    state: "started"
    enabled: true
    daemon-reload: true
