---
- name: "install fail2ban dependencies"
  apt:
    name: "python3-pyinotify"
    state: "present"

# Only ensure repository is cloned, don't update yet
- name: "clone repository of fail2ban"
  git:
    repo: "{{ fail2ban.repo }}"
    dest: "{{ fail2ban.install_path }}"
    depth: 1
    force: true
    update: false
  diff: false
  register: "fail2ban_clone"

- name: "retrieve all version numbers of fail2ban"
  shell: "git fetch --tags"
  args:
    chdir: "{{ fail2ban.install_path }}"
  register: "fail2ban_fetch"
  changed_when: fail2ban_fetch.stdout != ""

- name: "determine latest version number of fail2ban"
  shell: "git describe --tags $(git rev-list --tags --max-count=1)"
  args:
    chdir: "{{ fail2ban.install_path }}"
  register: "fail2ban_version"
  # The next task already shows if there is actually a change
  changed_when: false

# Wrapped in block because otherwise templating is done before skipping task,
# which will fail in check mode
- block:
  - name: "install newest release of fail2ban"
    git:
      repo: "{{ fail2ban.repo }}"
      dest: "{{ fail2ban.install_path }}"
      version: "{{ fail2ban_version.stdout }}"
  diff: false
  # Don't run in check mode because previous "git fetch" task also can't be run
  # in check mode
  when: "not ansible_check_mode"

- block:
  - name: "install fail2ban"
    command: "python setup.py install"
    args:
      chdir: "{{ fail2ban.install_path }}"

  - name: "install fail2ban service file"
    copy:
      src: "{{ fail2ban.install_path }}/build/fail2ban.service"
      dest: "/etc/systemd/system/fail2ban.service"
      remote_src: true
    notify: "systemctl daemon-reload"
  when: "fail2ban_clone.changed or fail2ban_fetch.changed"

- name: "flush handlers"
  meta: "flush_handlers"

- name: "configure fail2ban"
  template:
    src: "templates/{{ item }}.j2"
    dest: "/{{ item }}"
  with_items:
    - "etc/fail2ban/fail2ban.conf"
    - "etc/fail2ban/jail.conf"
    - "etc/fail2ban/filter.d/koala.conf"
  notify: "restart fail2ban"

- name: "start and enable fail2ban"
  service:
    name: "fail2ban"
    state: "started"
    enabled: true
