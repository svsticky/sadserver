---
- name: "install netdata build dependencies"
  apt:
    name: "{{ item }}"
    state: "present"
  with_items:
    - "zlib1g-dev"
    - "uuid-dev"
    - "libmnl-dev"
    - "gcc"
    - "make"
    - "git"
    - "autoconf"
    - "autoconf-archive"
    - "autogen"
    - "automake"
    - "pkg-config"
    - "curl"
  tags:
    - "monitoring"
    - "packages"

- block:
  # Only ensure repository is cloned, don't update yet
  - name: "clone repository of netdata"
    git:
      repo: "{{ netdata.repo }}"
      dest: "{{ netdata.src_path }}"
      update: false
    register: "netdata_checkout_result"

  - name: "retrieve all version numbers of netdata"
    shell: "git fetch --tags"
    args:
      chdir: "{{ netdata.src_path }}"
    register: "netdata_fetch"
    changed_when: "netdata_fetch.stdout != ''"

  - name: "determine latest version number of netdata"
    shell: "git describe --tags $(git rev-list --tags --max-count=1)"
    args:
      chdir: "{{ netdata.src_path }}"
    register: "netdata_version"
    # The next task already shows if there is actually a change
    changed_when: false

  # Wrapped in block because otherwise templating is done before skipping task,
  # which will fail in check mode
  - block:
    - name: "checkout newest release of netdata"
      git:
        repo: "{{ netdata.repo }}"
        dest: "{{ netdata.src_path }}"
        version: "{{ netdata_version.stdout }}"
    # Don't run in check mode because previous "git fetch" task also can't be
    # run in check mode
    when: not ansible_check_mode

  - name: "build and install/update netdata"
    command: "./netdata-installer.sh --dont-wait"
    args:
      chdir: "{{ netdata.src_path }}"
    when: "netdata_checkout_result.changed"
  vars:
    netdata:
      repo: "https://github.com/firehol/netdata.git"
      src_path: "/usr/local/src/netdata"
  tags:
    - "monitoring"
    - "packages"

- name: "enable slack notifications for netdata's alarms"
  lineinfile:
    path: "/etc/netdata/health_alarm_notify.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "present"
  with_items:
    - regexp: "^SEND_SLACK="
      line: "SEND_SLACK=\"YES\""
    - regexp: "^SLACK_WEBHOOK_URL="
      line: "SLACK_WEBHOOK_URL=\"{{ slack_notifications.webhook_url }}\""
    - regexp: "^DEFAULT_RECIPIENT_SLACK="
      line:
        "DEFAULT_RECIPIENT_SLACK=\"{{ slack_notifications.default_channel }}\""

- name: "raise alert threshold for tcp listen drops"
  template:
    src: "templates/{{ path }}.j2"
    dest: "/{{ path }}"
    owner: "netdata"
    group: "netdata"
    mode: "0660"
  vars:
    path: "etc/netdata/health.d/tcp_listen.conf"

- name: "copy nginx files for metrics site"
  template:
    src: "templates/{{ item }}.conf.j2"
    dest: "/{{ item }}.{{ canonical_hostname }}.conf"
  with_items:
    - "etc/nginx/sites-available/metrics"
    - "etc/nginx/htpasswd.d/metrics"
  tags:
    - "monitoring"
    - "nginx"
  notify: "reload nginx"

- name: "enable nginx proxy config for metrics site"
  file:
    src: "/etc/nginx/sites-available/metrics.{{ canonical_hostname }}.conf"
    path: "/etc/nginx/sites-enabled/metrics.{{ canonical_hostname }}.conf"
    state: "link"
  tags:
    - "monitoring"
    - "nginx"
  notify: "reload nginx"
