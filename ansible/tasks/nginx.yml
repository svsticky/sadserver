---

# TODO: voor een VHOSt
# * hostnames
# * certificaat (op basis van hostname)
# * webroot op basis van hostname + (mogelijk user) (moet nog gecheckt worden)
# * php ja of nee.

- name: "install nginx"
  apt:
    name: nginx
    state: latest

- name: "install php-fpm"
  apt:
    name: php-fpm
    state: latest

- name: "copy configuration files"
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
  with_items:
    - etc/nginx/nginx.conf
    - etc/php/7.0/fpm/php.ini
  notify: reload nginx

- name: "install openssl"
  apt:
    name: openssl
    state: latest


- name: "create directory for self-signed certs"
  file:
    path: "/etc/letsencrypt/live/{{item.value.hostnames[0]}}"
    owner: root
    group: root
    mode: 0755
    state: directory
  with_dict: "{{ websites }}"

- name: "create self-signed certs for all websites"
  command: >
    openssl req -x509 \
                -newkey rsa:4096 \
                -keyout /etc/letsencrypt/live/{{item.value.hostnames[0]}}/privkey.pem \
                -out /etc/letsencrypt/live/{{item.value.hostnames[0]}}/fullchain.pem \
                -days 10 \
                -nodes \
                -subj '/C=US/ST=Oregon/L=Portland/O=Sticky/OU=Org/CN=*'
  args:
    creates: /etc/letsencrypt/live/{{item.value.hostnames[0]}}/privkey.pem
  with_dict: "{{ websites }}"



- name: "copy dhparams and default configuration"
  copy:
    src: "files/{{ item }}"
    dest: "/{{ item }}"
    owner: root
    group: root
  with_items:
    - etc/nginx/dhparams.pem
    - etc/nginx/sites-available/default

- name: "start and enable nginx"
  service:
    name: nginx
    enabled: yes

# TODO: change ownership to something more proper
- name: "create acme-challenges directory"
  file:
    path: /var/www/acme-challenges
    state: directory
    owner: certbot
    group: www-data


# TODO: Make this template based

- name: "create website directories"
  file:
    path: "/var/www/{{item.value.user}}/{{item.value.hostnames[0]}}"
    owner: "{{item.value.user}}"
    group: www-data
    mode: 0755
    state: directory
  with_dict: "{{ websites }}"


- name: "copy website nginx configuraitons"
  template:
    src: "etc/nginx/sites-available/website.conf.j2"
    dest: "/etc/nginx/sites-available/{{item.value.hostnames[0]}}.conf"
  with_dict: "{{ websites }}"


- name: "enable website nginx configurations"
  file:
    src: "/etc/nginx/sites-available/{{item.value.hostnames[0]}}.conf"
    dest: "/etc/nginx/sites-enabled/{{item.value.hostnames[0]}}.conf"
    state: link
  with_dict: "{{ websites }}"
  notify: reload nginx

