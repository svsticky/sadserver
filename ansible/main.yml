---
- hosts: "all"
  remote_user: "ansible"
  become: true
  become_user: "root"
  become_method: "sudo"
  force_handlers: true

  handlers:
    - import_tasks: "handlers/main.yml"

  roles:
    - role: "common"
      tags: "always"
    - role: "packages"
      tags: "packages"
    - role: "digidecs"
      tags: "digidecs"
    - role: "freight"
      tags: "freight"
    - role: "static-sticky"
      tags: "static"
    - role: "pretix"
      tags: "pretix"
    - role: "koala"
      tags: "koala"
    - role: "outline"
      tags: "outline"
    - role: "aas"
      tags: "aas"
    - role: "execut"
      tags: "execut"
    - role: "databases"
      tags: "databases"
    - role: "radio"
      tags: "radio"
    - role: "auth"
      tags: "auth"
    - role: "users"
      tags: "users"
    - role: "sodi"
      tags: "sodi"
    - role: "firewall"
      tags: "firewall"
    - role: "backups"
      tags: "backups"
    - role: "redis"
      tags: "redis"
    - role: "oauth2_proxy"
      tags: "oauth"
    - role: "public_files"
      tags: "public"
    - role: "files_website"
      tags: "files"

  tasks:
    - name: "start process of configuring the webserver"
      include_tasks: "tasks/nginx.yml"
    - name: "start process of installing Nix"
      include_tasks: "tasks/nix.yml"
    - name: "start process of configuring monitoring services"
      include_tasks: "tasks/monitoring.yml"
    - name: "start process of configuring stickypedia"
      include_tasks: "tasks/stickypedia.yml"
    # - name: "start process of configuring the telegram crazy88bot"
    #   include_tasks: "tasks/crazy88bot.yml"


  post_tasks:
    # Included the last, so any service that fail2ban is applied to, already
    # exists. Otherwise fail2ban would miss the log files it has to monitor.
    - name: "start process of configuring fail2ban"
      include_tasks: "tasks/fail2ban.yml"
      tags: "always"
