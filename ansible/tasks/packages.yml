---
# Needed because of Ansible issue #25414
- name: "check if unattended-upgrades is not in progress"
  shell:
    "while fuser /var/lib/dpkg/lock; do sleep 1; done;"
  become: true
  changed_when: false

- name: "install common utilities"
  apt:
    pkg: "{{ item }}"
    state: "present"
  with_items:
    - "aptitude"
    - "htop"
    - "unattended-upgrades"
    - "haveged"

- name: "update all packages"
  apt:
    upgrade: "yes"
    update_cache: "yes"
    cache_valid_time: 100

- name: "configure unattended-upgrades"
  template:
    src: "templates/{{ item }}.j2"
    dest: "/{{ item }}"
  with_items:
    - "etc/apt/apt.conf.d/50unattended-upgrades"
    - "etc/systemd/system/unattended-upgrades-output.service"
    - "etc/systemd/system/unattended-upgrades-output.timer"
  notify:
    - "systemctl daemon-reload"

- name: "enable unattended-upgrades notification in production"
  service:
    name: "unattended-upgrades-output.timer"
    enabled: "{% if staging == 'true' %}false{% else %}true{% endif %}"
    state: "{% if staging == 'true' %}stopped{% else %}started{% endif %}"

# slacktee is the tool we use to let the server send notifications to Slack.
# Replaces email.
# Only ensure repository is cloned, don't update yet
- name: "clone repository of slacktee"
  git:
    repo: "{{ slacktee.repo }}"
    dest: "{{ slacktee.install_path }}"
    update: false

- name: "retrieve all version numbers of slacktee"
  shell: "git fetch --tags"
  args:
    chdir: "{{ slacktee.install_path }}"
  register: "slacktee_fetch"
  changed_when: slacktee_fetch.stdout != ""

- name: "determine latest version number of slacktee"
  shell: "git describe --tags $(git rev-list --tags --max-count=1)"
  args:
    chdir: "{{ slacktee.install_path }}"
  register: "slacktee_version"
  # The next task already shows if there is actually a change
  changed_when: false

- name: "install newest release of slacktee"
  git:
    repo: "{{ slacktee.repo }}"
    dest: "{{ slacktee.install_path }}"
    version: "{{ slacktee_version.stdout }}"

- name: "create symlink to slacktee in $PATH"
  file:
    src: "{{ slacktee.install_path }}/{{ filename }}.sh"
    path: "/usr/local/bin/{{ filename }}"
    state: "link"
  vars:
    filename: "slacktee"

- name: "configure slacktee"
  template:
    src: "templates/{{ item }}"
    dest: "/{{ item }}"
  with_items:
    - "etc/slacktee.conf"
