---
# - name: "add deadsnakes PPA"
#   apt_repository:
#     repo: "ppa:deadsnakes/ppa"

# - name: "install Python 3.9"
#   apt:
#     pkg:
#       - "python3.9"
#       - "python3.9-venv"
#       - "python3.9-dev"
#     state: "present"

# - name: "ensure database user exists"
#   postgresql_user:
#     name: "symposium"
#   become_user: "postgres"
#   become: true

# - name: "ensure database exists"
#   postgresql_db:
#     name: "execut"
#     owner: "symposium"
#   become_user: "postgres"
#   become: true

# - name: "ensure database user has the right privileges"
#   postgresql_user:
#     db: "execut"
#     name: "symposium"
#     priv: "ALL"
#     role_attr_flags: "CREATEDB,LOGIN"
#   become_user: "postgres"
#   become: true
#   ignore_errors: "{{ ansible_check_mode }}"

- name: "determine website folder"
  ansible.builtin.set_fact:
    execut_website_path: "/var/www/symposium/execut-2023.{{ canonical_hostname }}"

- name: "make website directory"
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "symposium"
    group: "symposium"
    state: "directory"
  with_items:
    - "{{ execut_website_path }}"
    - "/var/www/symposium/.local"
    - "/var/www/symposium/.cache"

- name: "perform stuff as `symposium`"
  become_user: "symposium"
  become: true
  block:
    - name: "clone website's repository"
      ansible.builtin.git:
        repo: "https://github.com/stichtingsticky/execut"
        dest: "{{ execut_website_path }}"
        version: "main"
      diff: false

# FIXME update pnpm in symposium
- name: "run pnpm install"
  ansible.builtin.command:
    cmd: >
      nix --extra-experimental-features 'nix-command flakes'
      shell nixpkgs#nodePackages.pnpm -c
      pnpm install
    chdir: "/var/www/symposium/execut-2023.{{ canonical_hostname }}/sites/static"

- name: "run pnpm build"
  ansible.builtin.command:
    cmd: >
      nix --extra-experimental-features 'nix-command flakes'
      shell nixpkgs#nodePackages.pnpm -c
      pnpm build
    chdir: "/var/www/symposium/execut-2023.{{ canonical_hostname }}/sites/static"

# - name: "install service file"
#   template:
#     src: "execut.service.j2"
#     dest: "/etc/systemd/system/execut-django-website.service"
#     mode: "0644"
#   notify: "systemctl daemon-reload"

- name: "install Nginx config"
  ansible.builtin.template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/sites-available/execut-2023.{{ canonical_hostname }}.conf"
  notify: "reload nginx"

- name: "enable Nginx config"
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/execut-2023.{{ canonical_hostname }}.conf"
    dest: "/etc/nginx/sites-enabled/execut-2023.{{ canonical_hostname }}.conf"
    state: "link"
  notify: "reload nginx"

- name: "test Nginx config"
  ansible.builtin.command: "nginx -t"
  changed_when: false

- name: "Reload Nginx, systemd if needed"
  ansible.builtin.meta: "flush_handlers"

# - name: "Start and enable website service"
#   systemd:
#     name: "execut-django-website.service"
#     state: "restarted"
#     enabled: true
