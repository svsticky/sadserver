---
- name: "ensure shiny user exists"
  user:
    name: "shiny"
    shell: "/usr/sbin/nologin"
    home: "/var/www/shiny"
    system: true

- name: "give the shiny user read access on the koala database"
  mysql_user:
    name: "shiny"
    priv: "koala.*:SELECT"
    state: "present"
  become_user: root
  become_method: sudo
  no_log: true

- name: "install R and dependencies"
  apt:
    name:
      - "r-base"
      - "libcurl4-openssl-dev"
    state: "present"

- name: "download Shiny Server binary"
  get_url:
    url: "https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.13.944-amd64.deb"
    dest: "/tmp"
    mode: "u+x"
    checksum: "sha256:91faeaa20b42a29b89f3cb1ae78e52622685fd083ac51a0992510a9f52c04e47"
  check_mode: "no"

- name: "install Shiny Server"
  apt:
    deb: "/tmp/shiny-server-1.5.13.944-amd64.deb"
    state: "present"

- name: "copy shiny server config"
  template:
    src: "templates/etc/shiny-server/shiny-server.conf.j2"
    dest: "/etc/shiny-server/shiny-server.conf"
  notify: "restart shiny server"

- name: "Install R packages"
  command: >
    Rscript --slave --no-save --no-restore-history -e
    "if (! ('{{ item }}' %in% installed.packages()[,'Package']))
    { install.packages(pkgs='{{ item }}', repos=c('https://cran.rstudio.com'));
    print('Added'); }
    else { print('Already installed'); }"
  register: r_result
  failed_when: "r_result.rc != 0 or 'had non-zero exit status' in r_result.stderr"
  changed_when: "'Added' in r_result.stdout"
  with_items:
    - shiny
    - shinydashboard
    - plotly
    - data.table
    - stringr
    - dbplyr
    - dplyr
    - RMariaDB
    - DBI
    - bit64

- block:
  - name: "ensure shiny has a ssh directory"
    file:
      path: "~/.ssh"
      state: "directory"

  - name: "copy deploy key for private projects on GitHub"
    copy:
      content: "{{ secret_deploy_key }}"
      dest: "/var/www/shiny/.ssh/id_ed25519"
      mode: "0600"

  - name: "clone shiny repository"
    git:
      repo: "git@github.com:svsticky/shiny-octopus.git"
      dest: "/var/www/shiny/shiny.{{ canonical_hostname }}"
      version: "master"
    diff: false
    notify: "restart shiny server"

  - name: "put config file in place"
    template:
      src: "templates/var/www/shiny/config.R"
      dest: "/var/www/shiny/shiny.{{ canonical_hostname }}/config.R"
    notify: "restart shiny server"

  become_user: shiny

- name: "run the shiny app"
  systemd:
    unit: "shiny-server.service"
    state: "started"
    enabled: true
    daemon-reload: true
