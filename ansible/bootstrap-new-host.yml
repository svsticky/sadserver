---
- hosts: "all"
  remote_user: "root"
  gather_facts: false
  force_handlers: true

  vars:
    # Hardcoded path because it's hardcoded in some places in the main playbook
    # as well
    ansible_home_dir: "/home/ansible"
    finish_msg: |
      Now you can run the main playbook in the same way as this playbook, which
      will run under the ansible user we've just created.

  pre_tasks:
    # Checks if ansible user is already present
    - name: "check if host is already bootstrapped"
      user:
        name: "ansible"
        state: "present"
      check_mode: true
      register: "bootstrap_status"

    - name: "exit if bootstrapping is not necessary"
      fail:
        msg: "Bootstrapping not necessary, host is already bootstrapped."
      when: "bootstrap_status is not changed"

  tasks:
    - name: "set restrictive umask"
      lineinfile:
        path: "/etc/login.defs"
        regexp: "^UMASK\\s"
        line: "UMASK\t\t027"

    - name: "create ansible user"
      user:
        name: "ansible"
        groups: "sudo,adm"
        home: "{{ ansible_home_dir }}"
        shell: "/bin/bash"
        password: "{{ ansible_become_password | password_hash('sha256') }}"
        state: "present"

    - name: "create directory for ansible user's ssh keys"
      file:
        path: "{{ ansible_home_dir }}/.ssh"
        state: "directory"
        mode: "0700"
        owner: "ansible"
        group: "ansible"

    - name: "copy root's ssh keys to ansible user"
      copy:
        src: "/root/.ssh/authorized_keys"
        dest: "{{ ansible_home_dir }}/.ssh/"
        remote_src: true
        force: false
        mode: "0600"
        owner: "ansible"
        group: "ansible"

    - name: "print finish message"
      debug:
        msg: "{{ finish_msg.split('\n') }}"
