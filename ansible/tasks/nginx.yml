---

# TODO: voor een VHOSt
# * hostnames
# * certificaat (op basis van hostname)
# * webroot op basis van hostname + (mogelijk user) (moet nog gecheckt worden)
# * php ja of nee.

- name: "install nginx"
  apt:
    name: nginx
    state: latest

- name: "install php-fpm"
  apt:
    name: php-fpm
    state: latest

- name: "copy default configuration":
  template:
    src: "{{ item }}.j2"
    dest: "//{{ item }}"
  with_items:
    - etc/php/7.0/fpm/php.conf

- name: "start and enable nginx"
  service:
    name: nginx
    state: started
    enabled: yes

- name: "copy dhparams and default configuration"
  copy:
    src: "files/{{ item }}"
    dest: "/{{ item }}"
    owner: root
    group: root
  with_items:
    - etc/nginx/dhparams.pem
    - etc/nginx/sites-available/default

# TODO: change ownership to something more proper
- name: "create acme-challenges directory"
  file:
    path: /var/www/acme-challenges
    state: directory
    owner: www-data
    group: www-data

- name: "copy nginx configuration"
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
  with_items:
    - etc/nginx/nginx.conf
  notify: reload nginx

# TODO: Make this template based

- name: "create website directories"
  file:
    path: "/var/www/{{item.value.user}}/{{item.value.hostnames[0]}}"
    owner: "{{item.value.user}}"
    group: sudo
    mode: 0755
    state: directory
  with_dict: "{{ websites }}"


- name: "copy website nginx configuraitons"
  template:
    src: "etc/nginx/sites-available/website.conf.j2"
    dest: "/etc/nginx/sites-available/{{item.value.hostnames[0]}}.conf"
  with_dict: "{{ websites }}"


- name: "enable website nginx configurations"
  file:
    src: "/etc/nginx/sites-available/{{item.value.hostnames[0]}}.conf"
    dest: "/etc/nginx/sites-enabled/{{item.value.hostnames[0]}}.conf"
    state: link
  with_dict: "{{ websites }}"
  notify: reload nginx

