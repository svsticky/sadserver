---
- name: "copy Nix install script"
  ansible.builtin.copy:
    src: "install"
    dest: "/var/tmp/install-nix"
    mode: "0755"

- name: "Run Nix installer" # noqa risky-shell-pipe
  become: true
  become_user: "eindbaas"
  ansible.builtin.shell: "yes | /var/tmp/install-nix --daemon"
  args:
    creates: "/nix"


- name: "Make Nix programs available without sourcing shell stuff"
  with_items:
    - "nix"
    - "nix-build"
    - "nix-channel"
    - "nix-collect-garbage"
    - "nix-env"
    - "nix-hash"
    - "nix-instantiate"
    - "nix-prefetch-url"
    - "nix-shell"
    - "nix-store"
  ansible.builtin.file:
    src: "/nix/var/nix/profiles/default/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    state: "link"
  become: true

- name: "Update Nix to the latest version" # See https://nix.dev/manual/nix/2.24/installation/upgrading.html
  ansible.builtin.shell: "nix-channel --update && nix-env -iA nixpkgs.nix nixpkgs.cacert"
  notify:
    - "systemctl daemon-reload"
    - "restart nix-daemon"

- name: "install cachix"
  ansible.builtin.command: "nix-env -iA cachix -f https://cachix.org/api/v1/install"

- name: "Make cachix available without sourcing shell stuff"
  ansible.builtin.file:
    src: "/nix/var/nix/profiles/default/bin/cachix"
    dest: "/usr/local/bin/cachix"
    state: "link"
  become: true

# Only trusted users can use the binary cache
# See: https://nixos.org/manual/nix/stable/installation/multi-user.html#multi-user-mode
- name: "set ansible user as trusted Nix user"
  ansible.builtin.lineinfile:
    path: "/etc/nix/nix.conf"
    regexp: "^trusted-users"
    line: "trusted-users = ansible koala"
  notify: "restart nix-daemon"
