---
- name: "create committee group"
  group:
    name: "committee"
    state: "present"

- name: "create /var/www"
  file:
    path: "/var/www"
    state: "directory"

- name: "create/delete users"
  user:
    name: "{{ item.name }}"
    groups: "{%if item.admin %}sudo,adm{% else %}committee{% endif %}"
    state: "{{ item.state }}"
    home: "{{ item.home_prefix }}/{{ item.name }}"
    move_home: true
  with_items:
    - "{{ users }}"
  loop_control:
    label: "{{ item.name }}"

- name: "fix permissions for chroot of committee users"
  file:
    path: "/var/www/{{ item.name }}"
    owner: "root"
    state: "directory"
  when:
    # List is evaluated as logical AND
    - item.admin != true
    - item.state == 'present'
  with_items:
    - "{{ users }}"
  loop_control:
    label: "{{ item.name }}"

# This is set separately, so it's not enabled for committee users, who should be
# only able to use SFTP.
- name: "set shell for admins"
  user:
    name: "{{ item.name }}"
    shell: "/bin/bash"
    state: "{{ item.state }}"
  when:
    # List is evaluated as logical AND
    - item.admin == true
    - item.state == 'present'
  with_items:
    - "{{ users }}"
  loop_control:
    label: "{{ item.name }}"

- name: "add environment to bash prompt of admins"
  lineinfile:
    dest: "/home/{{ item.name }}/.bashrc"
    regexp: "^export PS1="
    line: "{{ bash_prompt }}"
  when: item.admin == true and item.state == 'present'
  with_items:
    - "{{ users }}"
  loop_control:
    label: "{{ item.name }}"

- name: "add environment to bash prompt of root"
  lineinfile:
    dest: "/root/.bashrc"
    regexp: "^export PS1="
    line:
      "{{ bash_prompt | regex_replace('\\$ ', '# ') }}"
