---
- name: "Create user for fallacious-rooster"
  ansible.builtin.user:
    name: fallacious-rooster
    home: "{{ rooster_config.home }}"
    shell: "/usr/sbin/nologin"
    system: true
    state: "present"
    create_home: false

- name: "Create home directory"
  ansible.builtin.file:
    path: "{{ rooster_config.home }}"
    owner: "fallacious-rooster"
    group: "fallacious-rooster"
    mode: "2775"
    state: "directory"

- name: "Create fallacious-rooster frontend directory"
  ansible.builtin.file:
    name: "{{ rooster_config.home }}/frontend"
    owner: "fallacious-rooster"
    group: "fallacious-rooster"
    mode: "2775"
    state: "directory"

- name: "Create fallacious-rooster server directory"
  ansible.builtin.file:
    name: "{{ rooster_config.home }}/server"
    owner: "fallacious-rooster"
    group: "fallacious-rooster"
    mode: "2775"
    state: "directory"

- name: "install dependencies"
  ansible.builtin.apt:
    name:
      - "python3-dotenv-cli"
    state: "present"

- name: "Determine base url to online artifacts to deploy"
  ansible.builtin.set_fact:
    artifact_base_url: "https://github.com/svsticky/fallacious-rooster/releases/{% if fallacious_rooster.git_tag == 'latest' %}latest/download{% else %}download/{{ fallacious_rooster.git_tag }}{% endif %}"

- name: "Download and extract fallacious-rooster frontend"
  ansible.builtin.unarchive:
    src: "{{ artifact_base_url }}/frontend.tar.gz"
    dest: "{{ rooster_config.home }}/frontend"
    remote_src: true
    owner: "fallacious-rooster"
    group: "fallacious-rooster"
    mode: "775"
    extra_opts:
    - "--strip-components=1"

- name: "Download and extract fallacious-rooster server"
  ansible.builtin.get_url:
    url: "{{ artifact_base_url }}/server-x86_64-unknown-linux-musl"
    dest: "{{ rooster_config.home }}/server"
    owner: "fallacious-rooster"
    group: "fallacious-rooster"
    mode: "775"
  notify: "restart fallacious-rooster"

- name: "Copy nginx configuration"
  ansible.builtin.template:
    src: "fallacious-rooster.conf.j2"
    dest: "/etc/nginx/sites-enabled/fallacious-rooster.{{ canonical_hostname }}.conf"
  notify: "reload nginx"

- name: "Template environment file for fallacious-rooster"
  ansible.builtin.template:
    src: "env.j2"
    dest: "{{ rooster_config.home }}/server/.env"
  diff: false
  notify: "restart fallacious-rooster"

- name: "Template config file for fallacious-rooster"
  ansible.builtin.template:
    src: "fallacious-rooster.json.j2"
    dest: "{{ rooster_config.home }}/server/config.json"
  diff: false
  notify: "restart fallacious-rooster"

- name: "template systemd service file for fallacious-rooster"
  ansible.builtin.template:
    src: "fallacious-rooster.service.j2"
    dest: "/etc/systemd/system/fallacious-rooster.service"
  notify: "restart fallacious-rooster"

- name: "run fallacious-rooster-roosterma service"
  ansible.builtin.systemd:
    unit: "fallacious-rooster.service"
    state: "started"
    enabled: true
    daemon-reload: true
