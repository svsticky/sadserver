---
- name: "block that can be removed after having run once"
  block:
  - name: "check if old fail2ban installation is present"
    stat:
      path: "{{ fail2ban.install_path }}"
    register: "old_fail2ban"

  - block:
    - name: "install fail2ban once more manually to record the installed files"
      command: "python setup.py install --record {{ old_fail2ban_file_listing }}"
      args:
        chdir: "{{ fail2ban.install_path }}"

    - name: "remove old fail2ban service file"
      file:
        path: "/etc/systemd/system/fail2ban.service"
        state: "absent"
      notify: "systemctl daemon-reload"

    - name:
        "read generated file with listing of fail2ban files from manual
        installation"
      slurp:
        src: "{{ old_fail2ban_file_listing }}"
      register: "fail2ban_files"

    - name: "remove the installed fail2ban files from manual installation"
      file:
        path: "{{ item }}"
        state: "absent"
      with_items:
        - "{{ (fail2ban_files['content'] | b64decode).split('\n') }}"
        - "/etc/fail2ban"
        - "{{ fail2ban.install_path }}"
    vars:
      old_fail2ban_file_listing: "/tmp/old-fail2ban-files.txt"
    when: "old_fail2ban.stat.exists"

- name: "install fail2ban"
  apt:
    name: "fail2ban"
    state: "present"

- name: "flush handlers so the files exist that fail2ban monitors"
  meta: "flush_handlers"

- name: "configure fail2ban"
  template:
    src: "templates/{{ item }}.j2"
    dest: "/{{ item }}"
  with_items:
    - "etc/fail2ban/fail2ban.local"
    - "etc/fail2ban/jail.local"
    - "etc/fail2ban/filter.d/koala.conf"
  notify: "restart fail2ban"

- name: "start and enable fail2ban"
  service:
    name: "fail2ban"
    state: "started"
    enabled: true
