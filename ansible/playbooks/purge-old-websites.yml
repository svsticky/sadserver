---
- hosts: "all"
  remote_user: "ansible"
  become: true
  become_user: "root"
  become_method: "sudo"
  force_handlers: true

  vars_prompt:
    - name: "confirm"
      default: 'ABORT'
      private: false
      prompt:
        "The playbook you are about to execute will DELETE ALL DATA OF
        ALL WEBSITES WHOSE \"STATE\" IS SET TO ABSENT. Are you CERTAIN that
        you wish to continue? If so, enter `obliteration`. Any other value
        will abort."

  tasks:
    - assert:
        that:
          - "confirm == 'obliteration'"

    # Revoke website certificate, to avoid renewal notifications from the CA
    - name: "revoke certificate(s)"
      # --non-interactive makes sure command never waits for user input
      command:
        "certbot revoke
        --non-interactive
        --cert-path /etc/letsencrypt/live/{{ item.name }}/cert.pem
        --reason cessationofoperation"
      with_items: "{{ websites }}"
      # Added because Certbot will error if cert is already deleted
      failed_when: false
      when: item.state == "absent"

    - name: "delete webroot(s)"
      file:
        path:
          "/var/www/{% if item.user is defined %}{{ item.user }}/{% endif
          %}{{ item.name }}"
        state: "absent"
      with_items: "{{ websites }}"
      when:
        # List is evaluated as logical AND
        - item.state == "absent"
        - "item.custom_config is undefined or not item.custom_config"

    - name: "delete database(s)"
      command: "mysql -NBe 'DROP DATABASE IF EXISTS {{ item.database.name }};'"
      with_items: "{{ websites }}"
      when:
        # List is evaluated as logical AND
        - "item.database is defined"
        - "item.state == 'absent' or item.database.state == 'absent'"
      loop_control:
        label: "{{ item.database | default(item.name) }}"

    - name: "delete database user(s)"
      command: "mysql -NBe 'DROP USER IF EXISTS {{ db_user }}@localhost;'"
      vars:
        db_user: "{{ item.user | default(item.database.name) }}"
      with_items: "{{ websites }}"
      when:
        # List is evaluated as logical AND
        - "item.database is defined"
        - "item.state == 'absent' or item.database.state == 'absent'"
      loop_control:
        label:
          website: "{{ item.name }}"

    - name: "delete extra manual database user(s)"
      command:
        "mysql -NBe 'DROP USER IF EXISTS {{ item.1.name }}@localhost;'"
      with_subelements:
        - "{{ websites }}"
        - "database.extra_manual_users"
        - skip_missing: true
      when:
        "item.0.state == 'absent' or item.0.database.state == 'absent' or
        item.1.state == 'absent'"
      loop_control:
        label:
          website: "{{ item.0.name }}"
          database_user: "{{ item.1 }}"

    - debug:
        msg:
          "The certificates of all absent websites are revoked and deleted.
          Also, its webroot, database and db user (if existing) are deleted.
          Remember to delete any specific templates/tasks from this repository
          yourself."
