---
- name: "install netdata"
  apt:
    name: "netdata"
    state: "present"
  tags:
    - "monitoring"
    - "packages"

- name: "create directory for onfailure override for netdata service"
  file:
    path: "/etc/systemd/system/netdata.service.d"
    mode: "o+rx"
    state: "directory"

- name: "copy overrides for netdata service"
  template:
    src: "templates/{{ item }}.j2"
    dest: "/{{ item }}"
    mode: "o+r"
  with_items:
    - "etc/systemd/system/netdata.service.d/onfailure.conf"
    - "etc/systemd/system/netdata.service.d/permissions.conf"
  register: "netdata_service_overrides"

- name: "make netdata listen on domain socket"
  lineinfile:
    regexp: "^(\\s*)bind socket to IP ="
    line: "\\1bind to = unix:/run/netdata/netdata.sock"
    backrefs: true
    path: "/etc/netdata/netdata.conf"
  register: "netdata_conf"

- name: "enable slack notifications for netdata's alarms"
  lineinfile:
    path: "/etc/netdata/health_alarm_notify.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "present"
  with_items:
    - regexp: "^SEND_SLACK="
      line: "SEND_SLACK=\"YES\""
    - regexp: "^SLACK_WEBHOOK_URL="
      line: "SLACK_WEBHOOK_URL=\"{{ slack_notifications.webhook_url }}\""
    - regexp: "^DEFAULT_RECIPIENT_SLACK="
      line:
        "DEFAULT_RECIPIENT_SLACK=\"{{ slack_notifications.default_channel }}\""
  register: "netdata_slack_notifications"

- name: "raise alert threshold for tcp listen drops"
  template:
    src: "templates/{{ path }}.j2"
    dest: "/{{ path }}"
    owner: "netdata"
    group: "netdata"
    mode: "o+r"
  vars:
    path: "etc/netdata/health.d/tcp_listen.conf"
  register: "netdata_listen_drop_rules"

# netdata service doesn't implement reloading
- name: "restart netdata if config changed"
  systemd:
    name: "netdata"
    daemon_reload: true
    state: "restarted"
  when:
    "netdata_service_overrides is changed or
    netdata_conf is changed or
    netdata_slack_notifications is changed or
    netdata_listen_drop_rules is changed"

- name: "copy nginx files for metrics site"
  template:
    src: "templates/{{ item.path }}.conf.j2"
    dest: "/{{ item.path }}.{{ canonical_hostname }}.conf"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode }}"
  with_items:
    - path: "etc/nginx/sites-available/metrics"
      mode: "o+r"
    - path: "etc/nginx/htpasswd.d/metrics"
      group: "www-data"
      mode: "0640"
  notify: "reload nginx"

- name: "enable nginx proxy config for metrics site"
  file:
    src: "/etc/nginx/sites-available/metrics.{{ canonical_hostname }}.conf"
    path: "/etc/nginx/sites-enabled/metrics.{{ canonical_hostname }}.conf"
    state: "link"
  tags:
    - "monitoring"
    - "nginx"
  notify: "reload nginx"
