---
- name: "ensure freight user exists"
  ansible.builtin.user:
    name: "freight"
    shell: "/bin/sh"
    home: "/var/lib/freight"
    system: true

- name: "ensure that freight has .ssh folder"
  ansible.builtin.file:
    path: "/var/lib/freight/.ssh"
    state: "directory"
    owner: "freight"
    group: "freight"

- name: "add authorized github key"
  ansible.builtin.copy:
    dest: "/var/lib/freight/.ssh/authorized_keys"
    content: "{{ freight_ssh_pub_key }}"
    owner: "freight"
    group: "freight"
    mode: "0644"

- name: "add apt key for freight"
  ansible.builtin.apt_key:
    data: "{{ lookup('file', 'pubkey.gpg') }}"
    id: "30EBF4E73CCE63EEE124DD278E6DA8B4E158C569"

- name: "add freight apt repository"
  ansible.builtin.apt_repository:
    repo: "deb http://build.openvpn.net/debian/freight_team {{ ansible_lsb.codename }} main"

- name: "ensure freight is installed and manageable"
  ansible.builtin.apt:
    name:
      - "freight"
  tags:
    - "packages"

- name: "copy nginx template"
  ansible.builtin.template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/sites-available/packages.{{ canonical_hostname }}.conf"

- name: "symlink nginx template"
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/packages.{{ canonical_hostname }}.conf"
    dest: "/etc/nginx/sites-enabled/packages.{{ canonical_hostname }}.conf"
    state: "link"

- name: "request tls certificates"
  ansible.builtin.command: >-
    certbot certonly
    --non-interactive
    --agree-tos
    --email "domreg@svsticky.nl"
    --keep-until-expiring
    --cert-name packages.{{ canonical_hostname }}
    --webroot
    --webroot-path /var/www/acme-challenges
    --domain packages.{{ canonical_hostname }}
    --deploy-hook "systemctl reload nginx"
  when: true
