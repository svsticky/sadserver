# {{ ansible_managed }}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name ~^(www\.)?(stickyutrecht|studieverenigingsticky)\.nl$
    ~^www\.{{ canonical_hostname }}$;

  ssl_certificate      /etc/letsencrypt/live/{{ canonical_hostname }}/fullchain.pem;
  ssl_certificate_key  /etc/letsencrypt/live/{{ canonical_hostname }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ canonical_hostname }}/chain.pem;

  include includes/security-headers.conf;

  return 301 https://{{ canonical_hostname }}$request_uri;
}

server {
  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;

  server_name {{ canonical_hostname }};

  ssl_certificate      /etc/letsencrypt/live/{{ canonical_hostname }}/fullchain.pem;
  ssl_certificate_key  /etc/letsencrypt/live/{{ canonical_hostname }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ canonical_hostname }}/chain.pem;

  root /var/www/static-sticky/static.{{ canonical_hostname }};
  index index.html index.htm;
  error_page 404 /404.html;

  include includes/security-headers.conf;

  location ~* /.git/ {
    deny all;
  }

  location /logs/ {
    # Construct correct request URI for systemd-journald-gateway, while only
    # allowing alphanumerics (to prevent exposing the other endpoints and
    # parameters that systemd-journald-gateway supports
    rewrite "^/logs/([\d\w]{32})$" /entries?_SYSTEMD_INVOCATION_ID=$1 break;
    return 403;
    proxy_pass http://localhost:19531;
  }

  location @doorgeefluik {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host "doorgeefluik.{{canonical_hostname}}";
    proxy_intercept_errors on;
    error_page 404 /404.html;
    proxy_pass http://localhost:1515/visit$request_uri;
  }

  location / {
    try_files $uri $uri/ @doorgeefluik;
  }
}
