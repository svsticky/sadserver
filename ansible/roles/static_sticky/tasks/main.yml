---
- name: "create user for static-sticky"
  ansible.builtin.user:
    name: "static-sticky"
    home: "/var/www/static-sticky"
    shell: "/usr/sbin/nologin"
    system: true
    state: "present"

- name: "create static-sticky directory"
  ansible.builtin.file:
    path: "/var/www/static-sticky/static-sticky"
    owner: "static-sticky"
    group: "static-sticky"
    mode: "2775"
    state: "directory"

- name: "copy systemd service for deploying static-sticky"
  ansible.builtin.copy:
    src: "deploy-static-sticky.service"
    dest: "/etc/systemd/system/deploy-static-sticky.service"

- name: "copy deploy script"
  ansible.builtin.template:
    src: "deploy-static-sticky.sh.j2"
    dest: "/usr/local/bin/deploy-static-sticky.sh"
    mode: "0755"

- name:
    "install systemd-journal-remote for accessing static-sticky's deploy logs
    remotely and awscli to fetch the builds from s3"
  ansible.builtin.apt:
    name:
      - "systemd-journal-remote"
      - "awscli"
    state: "present"

- name: "start and enable systemd-journal-gatewayd"
  ansible.builtin.systemd:
    name: "systemd-journal-gatewayd"
    enabled: true
    state: "started"

- name: "create build directory"
  become_user: "static-sticky"
  become: true
  ansible.builtin.file:
    path: "/var/www/static-sticky/build"
    state: "directory"

- name: "run deploy"
  ansible.builtin.systemd:
    name: "deploy-static-sticky.service"
    state: "started"

- name: "copy nginx configuration"
  ansible.builtin.template:
    src: "svsticky.conf.j2"
    dest: "/etc/nginx/sites-available/{{ canonical_hostname }}.conf"
  notify: "reload nginx"

- name: "enable nginx configuration"
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ canonical_hostname }}.conf"
    path: "/etc/nginx/sites-enabled/{{ canonical_hostname }}.conf"
    state: "link"
  notify: "reload nginx"
