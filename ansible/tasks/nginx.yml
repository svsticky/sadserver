---
- name: "install nginx, php-fpm and openssl"
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - nginx
    - php-fpm
    - openssl

- name: "copy configuration files"
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
  with_items:
    - etc/nginx/nginx.conf
    - etc/php/7.0/fpm/php.ini

- name: "copy dhparams and default configuration"
  copy:
    src: "files/{{ item }}"
    dest: "/{{ item }}"
    owner: root
    group: root
  with_items:
    - etc/nginx/dhparams.pem
    - etc/nginx/sites-available/default

- name: "enable default config"
  file:
    src: "/etc/nginx/sites-available/default"
    dest: "/etc/nginx/sites-enabled/default"
    state: link

- name: "start and enable nginx"
  service:
    name: nginx
    enabled: yes
    state: started

# We need this, because LetsEncrypt is dependent
# on default conf
- name: "reload nginx"
  service:
    name: nginx
    enabled: yes
    state: reloaded

- name: "install letsencrypt"
  apt:
    name: letsencrypt
    state: present

- name: "create certbot user"
  user:
    name: certbot
    comment: "LetsEncrypt certificate fetcher"
    system: yes
    createhome: no
    shell: /bin/nologin

- name: "create acme-challenges directory"
  file:
    path: /var/www/acme-challenges
    state: directory
    owner: certbot
    group: www-data
    # The 2xxx octal means the group setuid bit is set, meaning
    # all files that get created in this directory will have
    # the group `www-data`
    mode: 2750

- name: "request certificates"
  command: >
    letsencrypt certonly \
      --non-interactive \
      --agree-tos \
      --email "itcrowd@svsticky.nl" \
      --keep-until-expiring \
      --expand \
      --webroot \
      --webroot-path /var/www/acme-challenges \
      --domain {{ item.main_hostname }} \
      {% for hostname in item.alternative_hostnames %}
      --domain {{ hostname }} \
      {% endfor %}
  with_items: "{{ websites }}"


# TODO add renewals

- name: "create website directories"
  file:
    path: "/var/www/{{ item.user }}/{{ item.main_hostname }}"
    owner: "{{ item.user }}"
    group: www-data
    mode: 0755
    state: directory
  with_items: "{{ websites }}"
  when: item.no_folder is undefined

- name: "copy website nginx configuration"
  template:
    src: "etc/nginx/sites-available/website.conf.j2"
    dest: "/etc/nginx/sites-available/{{ item.main_hostname }}.conf"
  with_items: "{{ websites }}"
  when: item.no_folder is undefined

- name: "enable website nginx configurations"
  file:
    src: "/etc/nginx/sites-available/{{ item.main_hostname }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.main_hostname }}.conf"
    state: link
  with_items: "{{ websites }}"

# lets reload nginx to be sure
- name: "reload nginx"
  service:
    name: nginx
    enabled: yes
    state: reloaded
  when: item.no_folder is undefined
  notify: reload nginx
